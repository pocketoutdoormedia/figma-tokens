import * as React from 'react';
import {useDispatch, useSelector} from 'react-redux';
import Heading from './Heading';
import Button from './Button';
import Callout from './Callout';
import {StorageProviderType} from '../../../types/api';
import {Dispatch, RootState} from '../store';

const OutsideSvg = () => (
    <svg width="157" height="40" viewBox="0 0 157 40" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path
            d="M18.1974 39.079C28.5834 39.079 35.4923 31.531 36.2915 21.3851H38.049V32.4892C38.049 36.9203 41.1247 38.6397 45.1586 38.6397C48.3933 38.6397 51.1508 36.6438 52.469 34.2844V38.3215H62.0936V33.1671H59.1354V21.3851H63.8474V30.4933C63.8474 35.9242 66.0064 38.6397 70.9986 38.6397C73.8735 38.6397 75.4341 37.2422 76.5515 35.644V38.3215H81.0248V35.4054C83.3429 37.8784 85.6193 38.6397 89.0131 38.6397C92.1305 38.6397 94.6872 37.5603 96.0394 35.5644V38.3215H110.622V35.0077C112.141 37.2838 114.815 38.6018 118.289 38.6018C121.406 38.6018 123.402 37.2838 124.963 34.8865V38.3215H135.424V34.9244C137.504 37.6777 140.58 38.7987 144.689 38.7987C150.359 38.7987 155.632 36.481 156.431 30.0919H149.841C149.322 32.849 148.041 34.167 145.129 34.167C142.689 34.167 140.973 32.6861 140.852 28.4558H156.23V27.5355C156.23 20.3474 151.954 15.8368 145.129 15.8368C138.777 15.8368 133.625 20.2299 133.625 27.2969C133.625 29.4935 133.947 31.531 134.705 33.1255H131.671V8.68647H121.004V13.9583H124.959V19.3513C123.671 17.363 121.455 16.1738 119.084 16.1965C112.535 16.1965 109.02 20.8283 109.02 27.1379C108.993 29.1868 109.315 31.2281 109.975 33.1709H106.422V16.1965H90.8426V18.9499C89.604 17.1926 87.8086 15.9958 84.6913 15.9958C80.9377 15.9958 78.54 17.1547 77.3848 18.7113V16.117H70.6729V10.2847H65.3624C65.3624 14.2385 64.3208 16.1132 59.0937 16.1132H48.7911V21.5025H52.4235V28.4104C52.4235 31.1675 51.0258 33.2807 48.0297 33.2807C45.473 33.2807 44.795 31.5613 44.795 29.289V16.1094H35.9695C34.3749 7.4897 28.1819 0.418945 18.1974 0.418945C6.69405 0.418945 0.0654907 8.84553 0.0654907 19.9459C0.0654907 30.7319 7.2963 39.079 18.1974 39.079ZM87.6533 34.4056C84.5019 34.4056 83.0588 32.9664 81.5816 30.5691H74.0326C74.15 33.0081 74.1121 34.3639 72.4721 34.3639C70.832 34.3639 70.6767 32.724 70.6767 31.4061V21.3851H76.7484C76.7143 21.7448 76.703 22.1046 76.7105 22.4644C76.7105 32.5687 90.5661 28.4975 90.5661 32.6483C90.5699 34.0836 88.8919 34.4056 87.6533 34.4056ZM96.7591 33.1255C96.8424 32.5687 96.8841 32.0082 96.8803 31.4477C96.8803 21.8244 82.8618 25.7366 82.8618 21.7827C82.8618 20.4648 84.5815 20.2262 86.1382 20.2262C88.3351 20.2262 89.6116 20.9041 90.6116 22.9795H96.3652V21.3813H100.32V33.1217H96.7591V33.1255ZM19.1974 33.2845C13.7658 33.3224 10.4477 24.661 10.4477 17.0297C10.4477 12.6366 12.1257 5.97103 17.1179 5.97103C23.7503 5.97103 25.9472 16.6737 25.9472 21.866C25.9472 26.7781 24.3525 33.2845 19.1974 33.2845ZM120.724 33.4853C117.088 33.4853 116.289 29.8495 116.289 26.8955C116.289 24.021 117.406 20.8662 120.845 20.8662C123.561 20.8662 124.963 23.4605 124.963 26.0585V28.2551C124.959 30.8115 123.641 33.4853 120.724 33.4853ZM140.973 24.9034C141.451 21.6691 143.129 20.4307 145.166 20.4307C147.92 20.4307 148.92 22.0705 149.117 24.9034H140.973ZM100.111 14.4734H106.425V8.68268H100.111V14.4734Z"
            fill="#FED20A"
        />
        <path
            d="M18.1963 39.1423C12.9806 39.1423 8.29138 37.173 4.99604 33.6016C1.77267 30.1098 0 25.2621 0 19.9449C0 14.3284 1.64767 9.49589 4.76877 5.97377C8.02624 2.29637 12.67 0.353516 18.1963 0.353516C22.9083 0.353516 27.0862 1.95551 30.2755 4.9853C33.2034 7.76513 35.192 11.5902 36.0253 16.0516H44.8621V29.2955C44.8621 31.9731 45.8696 33.2229 48.0324 33.2229C50.7407 33.2229 52.3618 31.4277 52.3618 28.4169V21.5696H48.7294V16.0478H59.1002C64.3462 16.0478 65.3046 14.105 65.3046 10.2836V10.2193H70.7438V16.0478H77.4556V18.5171C78.8041 16.8431 81.3646 15.9266 84.6978 15.9266C87.4174 15.9266 89.3567 16.8242 90.7847 18.7481V16.1311H106.493V33.1017H109.89C109.246 31.174 108.936 29.1668 108.962 27.133C108.962 23.9252 109.86 21.1984 111.553 19.2556C113.337 17.2105 115.943 16.1273 119.091 16.1273C119.113 16.1273 119.14 16.1273 119.163 16.1273C121.465 16.1273 123.59 17.2446 124.901 19.1306V14.0178H120.943V8.62104H131.738V33.0638H134.605C133.916 31.5603 133.564 29.6212 133.564 27.2997C133.564 23.8987 134.734 20.9826 136.954 18.8731C139.052 16.8772 141.957 15.7751 145.131 15.7751C152.021 15.7751 156.298 20.2819 156.298 27.5383V28.5229H140.919C141.044 32.2799 142.419 34.1053 145.128 34.1053C147.889 34.1053 149.237 32.9389 149.775 30.0833L149.786 30.0303H156.502L156.495 30.1022C155.798 35.6694 151.495 38.8659 144.688 38.8659C140.423 38.8659 137.491 37.6729 135.488 35.1203V38.3925H124.893V35.1089C123.231 37.5706 121.185 38.6727 118.288 38.6727C114.954 38.6727 112.265 37.4494 110.686 35.2226V38.3925H95.9739V35.7793C94.6066 37.6464 92.0839 38.7144 89.0121 38.7144C85.4364 38.7144 83.2736 37.8623 81.0919 35.5786V38.3963H76.4898V35.8588C75.5012 37.226 73.9747 38.7144 71.0051 38.7144C66.081 38.7144 63.7894 36.105 63.7894 30.5037V21.4484H59.2101V33.1017H62.1683V38.3849H52.4111V34.5257C50.8884 37.0707 48.0703 38.703 45.1651 38.703C40.5403 38.703 37.9911 36.4951 37.9911 32.4882V21.4484H36.3586C35.495 32.0337 28.2036 39.1423 18.1963 39.1423ZM18.1963 0.482281C12.7079 0.482281 8.0982 2.40998 4.86726 6.06087C1.76888 9.56028 0.132571 14.3587 0.132571 19.9449C0.132571 25.2281 1.89387 30.0454 5.09452 33.5107C8.41637 37.1086 12.9465 39.0098 18.2001 39.0098C28.1543 39.0098 35.4003 31.9239 36.2298 21.3764L36.2336 21.3158H38.1161V32.4844C38.1161 36.408 40.616 38.5705 45.1613 38.5705C48.1006 38.5705 50.9452 36.8738 52.4148 34.2492L52.5361 34.0296V38.2486H62.0319V33.2305H59.0737V21.3196H63.9145V30.4923C63.9145 36.0065 66.1644 38.5743 71.0013 38.5743C74.0353 38.5743 75.5352 36.9874 76.5011 35.6051L76.6185 35.4346V38.2523H80.9631V35.2377L81.0767 35.3589C83.2698 37.7032 85.4213 38.5743 89.0158 38.5743C92.1369 38.5743 94.6785 37.4646 95.9891 35.5293L96.1065 35.3551V38.2561H110.557V34.7908L110.674 34.9688C112.208 37.2677 114.913 38.5326 118.288 38.5326C121.208 38.5326 123.25 37.3964 124.905 34.8476L125.026 34.662V38.2523H135.359V34.7264L135.476 34.8817C137.457 37.5063 140.385 38.7295 144.692 38.7295C151.392 38.7295 155.642 35.6051 156.358 30.1552H149.896C149.336 33.0487 147.953 34.2303 145.128 34.2303C142.359 34.2303 140.897 32.2874 140.787 28.4548V28.3866H156.169V27.5307C156.169 20.3539 151.938 15.9001 145.131 15.9001C141.991 15.9001 139.116 16.987 137.044 18.9602C134.855 21.0469 133.696 23.929 133.696 27.2921C133.696 29.644 134.056 31.5944 134.768 33.0941L134.813 33.1888H131.609V8.74981H121.075V13.8891H125.034V19.5661L124.912 19.3806C123.64 17.4188 121.496 16.2561 119.163 16.2561C119.14 16.2561 119.117 16.2561 119.091 16.2561C112.924 16.2561 109.091 20.4221 109.091 27.133C109.064 29.1819 109.386 31.2043 110.042 33.1434L110.072 33.2305H106.364V16.2599H90.9173V19.1533L90.7999 18.9867C89.387 16.9908 87.4515 16.0592 84.7016 16.0592C81.3116 16.0592 78.7359 17.0135 77.4481 18.7481L77.3306 18.9072V16.1804H70.6188V10.348H65.4409C65.4295 14.2148 64.4334 16.1766 59.1078 16.1766H48.8695V21.437H52.502V28.4131C52.502 31.5035 50.8354 33.3479 48.0438 33.3479C45.7939 33.3479 44.7447 32.0602 44.7447 29.2918V16.1804H35.9154L35.9041 16.1273C35.0783 11.6736 33.0973 7.85223 30.1808 5.07998C27.018 2.07292 22.8742 0.482281 18.1963 0.482281ZM87.6523 34.4689C86.1296 34.4689 84.9516 34.1432 83.9516 33.4388C83.1221 32.8555 82.3987 32.0148 81.5426 30.6324H74.0997C74.1792 32.2496 74.183 33.4388 73.63 34.022C73.3687 34.2985 72.9899 34.431 72.471 34.431C70.6112 34.431 70.6112 32.314 70.6112 31.4088V21.3196H76.8193L76.8117 21.3916C76.7814 21.7476 76.7663 22.1074 76.7738 22.4634C76.7738 28.5646 81.8267 29.4432 85.8834 30.1477C88.4287 30.5908 90.6294 30.9733 90.6294 32.651C90.6332 34.2909 88.5499 34.4689 87.6523 34.4689ZM73.9633 30.5037H81.6146L81.6335 30.534C83.1562 32.9995 84.5652 34.3363 87.6485 34.3401C88.5045 34.3401 90.4968 34.1735 90.4968 32.6472C90.4968 31.0793 88.4515 30.7233 85.8569 30.2726C81.7509 29.5606 76.6375 28.6706 76.6375 22.4634C76.6299 22.1263 76.6413 21.7855 76.6716 21.4484H70.7362V31.4088C70.7362 32.8404 70.9407 34.3023 72.4672 34.3023C72.9482 34.3023 73.2929 34.1811 73.5315 33.9349C74.058 33.382 74.0429 32.1928 73.9633 30.5756V30.5037ZM120.723 33.5486C116.807 33.5486 116.223 29.3789 116.223 26.8944C116.223 25.2735 116.579 23.8078 117.223 22.7663C118.03 21.4598 119.25 20.8008 120.844 20.8008C123.59 20.8008 125.026 23.4443 125.026 26.0575V28.254C125.022 30.8066 123.678 33.5486 120.723 33.5486ZM120.84 20.9295C119.788 20.9295 116.352 21.3613 116.352 26.8944C116.352 29.3296 116.92 33.4198 120.723 33.4198C123.587 33.4198 124.893 30.7423 124.893 28.254V26.0575C124.893 23.5086 123.499 20.9295 120.84 20.9295ZM19.1963 33.3517C19.1849 33.3517 19.1698 33.3517 19.1584 33.3517C17.6888 33.3517 16.3138 32.7268 15.0714 31.4959C12.2647 28.7123 10.3822 22.8989 10.3822 17.0363C10.3822 13.1884 11.7913 5.90938 17.1168 5.90938C23.8363 5.90938 26.0105 16.6613 26.0105 21.8688C26.0142 27.1633 24.2264 33.3517 19.1963 33.3517ZM19.1963 33.2191C24.1317 33.2191 25.8817 27.1027 25.8817 21.865C25.8817 19.4525 25.3779 15.4191 23.9575 11.9955C22.8325 9.27623 20.7303 6.03436 17.1206 6.03436C11.8973 6.03436 10.5148 13.2263 10.5148 17.0287C10.5148 22.861 12.3821 28.6366 15.1661 31.3974C16.382 32.6056 17.7267 33.2153 19.1622 33.2153C19.1736 33.2191 19.1849 33.2191 19.1963 33.2191ZM100.379 33.1888H96.6785L96.6898 33.1131C96.7732 32.5639 96.811 32.0034 96.811 31.4467C96.811 25.6371 91.6976 24.8152 87.5917 24.1525C85.016 23.7397 82.7926 23.3799 82.7926 21.7817C82.7926 20.6909 83.8872 20.1607 86.1334 20.1607C88.4439 20.1607 89.6711 20.9068 90.6484 22.9141H96.2959V21.3158H100.383V33.1888H100.379ZM96.8337 33.06H100.25V21.4484H96.4247V23.0466H90.565L90.5461 23.0087C89.5916 21.028 88.3947 20.2895 86.1334 20.2895C83.9744 20.2895 82.9214 20.7781 82.9214 21.7817C82.9214 23.2701 84.9933 23.6033 87.6106 24.0237C91.7657 24.6903 96.9398 25.5235 96.9398 31.4467C96.9474 31.9845 96.9095 32.526 96.8337 33.06ZM149.188 24.9667H140.897L140.908 24.891C141.461 21.1454 143.529 20.3615 145.165 20.3615C147.726 20.3615 148.965 21.7589 149.184 24.8948L149.188 24.9667ZM141.048 24.8342H149.048C148.821 21.7892 147.658 20.4902 145.165 20.4902C143.59 20.4902 141.605 21.2477 141.048 24.8342ZM106.489 14.5405H100.046V8.61725H106.489V14.5405ZM100.178 14.4079H106.36V8.74981H100.178V14.4079Z"
            fill="black"
        />
    </svg>
);

const StartScreen = () => {
    const dispatch = useDispatch<Dispatch>();

    const {storageType} = useSelector((state: RootState) => state.uiState);
    const onSetDefaultTokens = () => {
        dispatch.uiState.setActiveTab('tokens');
        dispatch.tokenState.setEmptyTokens();
    };
    const onSetSyncClick = () => {
        dispatch.uiState.setActiveTab('syncsettings');
        dispatch.tokenState.setEmptyTokens();
        dispatch.uiState.setLocalApiState({
            id: storageType.id,
            name: storageType.name,
            provider: storageType.provider,
            secret: '',
            new: true,
        });
    };

    return (
        <div className="my-auto h-auto space-y-4 p-4">
            <OutsideSvg />
            <Heading>Manage Outside Figma Tokens.</Heading>
            <div className="text-xs">
                With Figma Tokens you&apos;re able to design with a single source of truth. Be it border radii, colors
                that are able to reference one another or spacing units — use dynamic values instead of manually
                updating your designs.
            </div>
            <div className="space-x-2 flex justify-between">
                <Button
                    href="https://jansix.at/resources/figma-tokens?ref=figma-tokens-plugin"
                    size="large"
                    variant="secondary"
                >
                    Learn more
                </Button>
                <Button id="button-configure" size="large" variant="primary" onClick={onSetDefaultTokens}>
                    Get started
                </Button>
            </div>
            {storageType?.provider !== StorageProviderType.LOCAL && (
                <Callout
                    id="callout-action-setupsync"
                    heading="Remote storage detected"
                    description={`This document is setup with a remote token source on ${storageType.provider}. Ask your team for the credentials, then enter them in the Sync dialog.`}
                    action={{
                        onClick: onSetSyncClick,
                        text: 'Set up sync',
                    }}
                />
            )}
        </div>
    );
};

export default StartScreen;
